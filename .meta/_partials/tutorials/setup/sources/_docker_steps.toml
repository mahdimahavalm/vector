[[<%= namespace %>]]
type = "text"
title = "Configure Vector"
description = """\
Before we start the Vector container, we need to configure Vector to tell it \
what to do:

```bash
echo '
[sources.in]
  type = "docker"

[sinks.out]
  inputs = ["in"]
  type = "console"
' > vector.toml
```

<CodeExplanation>

* The `vector.toml` file is the Vector configuration file that we'll pass \
  in the next step.
* The [`docker` source][docs.sources.docker] tells Vector to collect Docker \
  logs.
* The the [`console` sink][docs.sinks.console] simply prints the collected \
  logs so that we can manually verify everything is working.

</CodeExplanation>
"""

[[<%= namespace %>]]
type = "text"
title = "Start the Vector container"
description = """\
```bash
docker run \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v $PWD/vector.toml:/etc/vector/vector.toml:ro \\\ntimberio/vector:latest-alpine
```

<CodeExplanation>

* The first `-v` flag ensures that Vector has access to the Docker socket. \
  This is how Vector receives Docker logs.
* The second `-v` flag passes the previously created Vector configuration \
  file into the container.

</CodeExplanation>

Hooray! You shoul see output like the following if things are working correctly:

```text
output
```
"""
